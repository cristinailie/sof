#
# Smart amp reference capture pipeline
#
# All attributes defined herein are namespaced by alsatplg to
# "pipeline-smart-amp-ref-capture.attribute_name"
#
# Usage: this component can be used by declaring in the top-level topology conf file as follows:
#
# 	Object.pipeline-smart-amp-ref-capture."N.M" {
#		pcm_name	"Speaker Feedback"
#		format		"s32le"
#		period		1000
#		time_domain	"timer"
#		channels	2
#		rate		48000
#	}
#
# Where N and M are unique integers for pipeline ID and PCM ID in the parent object.
#
include/components/buffer.conf>
<include/components/host.conf>
<include/components/muxdemux.conf>
<include/components/pipeline.conf>
<include/controls/bytes.conf>
<include/common/data.conf>
<include/common/pcm.conf>
<include/common/pcm_caps.conf>

#
#
# (source) host.N.capture <- buffer.N.0 <- muxdemux.N.0 <- buffer.N.1 (source endpoint)
#						|
#						|
#						--> (Feedback sink endpoint)
#
Class.Pipeline."pipeline-smart-amp-ref-capture" {

	@args."pipeline_id" {
		type "integer"
	}

	@args."pcm_id" {
		type "integer"
	}

	<include/pipelines/pipeline-volume.conf>

	attributes {
		mandatory [
			"channels"
			"format"
			"rate"
			"direction"
			"period"
			"time_domain"
			"pcm_name"
		]
		immutable [
			"direction"
		]
	}

	pipeline."$pipeline_id" {
		period		"$period"
		time_domain	"$time_domain"
		core		0
		frames		0
		priority	0
		mips		5000
	}

	# Pipeline objects
	host."$pipeline_id.capture" {
		period_sink_count	0
		period_source_count	2
		widget_type		"aif_out"
	}

	buffer."$pipeline_id.0" {
		periods	2
		channels	"$channels"
		caps		"host"
	}

	muxdemux."$pipeline_id.0" {
		format			"$format"

		# byte control for mux/demux
		bytes."muxdemux.$pipeline_id.0" {
			max	304

			access [
				tlv_write
				tlv_read
				tlv_callback
			]

			data."muxdemux" {
				bytes "0x53,0x4f,0x46,0x00,0x00,0x00,0x00,0x00,
					0x28,0x00,0x00,0x00,0x00,0x60,0x00,0x03,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x02,0x00,0x04,0x00,0x02,0x00,0x00,0x00,
					0x01,0x00,0x00,0x00,0x04,0x01,0x02,0x04,
					0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
					0x0b,0x00,0x00,0x00,0x02,0x01,0x04,0x00,
					0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00"
			}
		}
	}

	buffer."$pipeline_id.1" {
		periods	2
		channels	4
		caps		"comp"
	}


	# PCM
	pcm."$pcm_name.capture.$pcm_id" {}

	# PCM Capabilities
	pcm_caps."$pcm_name.capture.$pcm_id" {}

	# Endpoint definitions
	endpoint."source.pipeline.$pipeline_id.0" {
		widget	"buffer.$pipeline_id.1"
	}

	endpoint."sink.pipeline.$pipeline_id.0" {
		widget	"muxdemux.$pipeline_id.0"
	}

	# Pipeline connections
	connection."graph.$pipeline_id.0" {
		sink	"host.$pipeline_id.capture"
		source	"buffer.$pipeline_id.0"
	}

	connection."graph.$pipeline_id.1" {
		sink	"buffer.$pipeline_id.0"
		source	"muxdemux.$pipeline_id.0"
	}

	connection."graph.$pipeline_id.2" {
		sink "muxdemux.$pipeline_id.0"
		source "buffer.$pipeline_id.1"
	}

	direction 	"capture"
	time_domain	"timer"
	period		1000
}
