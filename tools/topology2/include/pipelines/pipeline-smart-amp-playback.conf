#
# Smart amp playback pipeline
#
# All attributes defined herein are namespaced by alsatplg to
# "pipeline-smart-amp-playback.attribute_name"
#
# Usage: this component can be used by declaring in the top-level topology conf file as follows:
#
# 	Object.pipeline-smart-amp-playback."N.M" {
#		pcm_name	"Speaker"
#		format		"s32le"
#		period		1000
#		time_domain	"timer"
#		channels	2
#		rate		48000
#	}
#
# Where N and M are unique integers for pipeline ID and PCM ID in the parent object.
#
include/components/buffer.conf>
<include/components/host.conf>
<include/components/pipeline.conf>
<include/controls/bytes.conf>
<include/common/data.conf>
<include/common/pcm.conf>
<include/common/pcm_caps.conf>

#
#
# (sink) host.N.playback -> buffer.N.0 -> smart_amp.N.0 -> buffer.N.1 (sink endpoint)
#						^
#						|
#						--- buffer.N.2 (Feedback source endpoint)
#
Class.Pipeline."pipeline-smart-amp-playback" {

	@args."pipeline_id" {
		type "integer"
	}

	@args."pcm_id" {
		type "integer"
	}

	<include/pipelines/pipeline-volume.conf>

	DefineAttribute.core {}
	DefineAttribute.smart_amp_class {}
	DefineAttribute.smart_amp_config {}
	DefineAttribute.smart_amp_model {}
	DefineAttribute.smart_amp_model_get {}

	attributes {
		mandatory [
			"channels"
			"format"
			"rate"
			"direction"
			"period"
			"time_domain"
			"pcm_name"
		]
		immutable [
			"direction"
		]
	}

	pipeline."$pipeline_id" {
		period		"$period"
		time_domain	"$time_domain"
		core		$core
		frames		0
		priority	0
		mips		5000
	}

	# Pipeline objects
	host."$pipeline_id.playback" {
		period_sink_count	2
		period_source_count	0
		widget_type		"aif_in"
	}

	buffer."$pipeline_id.0" {
		periods	2
		channels	"$channels"
		caps		"host"
	}

	$smart_amp_class."$pipeline_id.0" {
		format			"$format"
		smart_amp_config	"$smart_amp_config"
		smart_amp_model	"$smart_amp_model"
		smart_amp_model_get	"$smart_amp_model_get"

		# byte control for Smart amp config
		bytes."config.$pipeline_id.0" {
			max	304
			data_name	"$smart_amp_config"

			access [
				tlv_write
				tlv_read
				tlv_callback
			]

			data."$data_name" {}
		}

		# byte control for Smart amp model
		bytes."model.$pipeline_id.0" {
			max	300000
			data_name	"$smart_amp_model"

			access [
				tlv_write
				tlv_read
				tlv_callback
			]

			data."$data_name" {}
		}

		# Read-only byte control for getting the Smart amp model params
		bytes."model_get_params.$pipeline_id.0" {
			max	300000
			data_name	"$smart_amp_model_get"

			access [
				volatile
				tlv_read
				tlv_callback
			]

			data."$data_name" {}
		}
	}

	buffer."$pipeline_id.1" {
		periods	2
		channels	4
		caps		"comp"
	}


	buffer."$pipeline_id.2" {
		periods	2
		channels	4
		caps		"host"
	}


	# PCM
	pcm."$pcm_name.playback.$pcm_id" {}

	# PCM Capabilities
	pcm_caps."$pcm_name.playback.$pcm_id" {}

	# Endpoint definitions
	endpoint."sink.pipeline.$pipeline_id.0" {
		widget	"buffer.$pipeline_id.1"
	}

	endpoint."source.pipeline.$pipeline_id.0" {
		widget	"buffer.$pipeline_id.2"
	}

	# Pipeline connections
	connection."graph.$pipeline_id.0" {
		source	"host.$pipeline_id.playback"
		sink	"buffer.$pipeline_id.0"
	}

	connection."graph.$pipeline_id.1" {
		source	"buffer.$pipeline_id.0"
		sink	"$smart_amp_class.$pipeline_id.0"
	}

	connection."graph.$pipeline_id.2" {
		source "$smart_amp_class.$pipeline_id.0"
		sink	"buffer.$pipeline_id.1"
	}

	connection."graph.$pipeline_id.3" {
		sink "$smart_amp_class.$pipeline_id.0"
		source	"buffer.$pipeline_id.2"
	}

	direction 	"playback"
	time_domain	"timer"
	period		1000
	core 		0
}
